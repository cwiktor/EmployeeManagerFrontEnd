{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employees = [];\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employeeService.getEmployees().subscribe(response => {\n      this.employees = response;\n    }), error => {\n      alert(error.message);\n    };\n  }\n  onAddEmloyee(addForm) {\n    document.getElementById('add-employee-form')?.click();\n    this.employeeService.addEmployee(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n      addForm.reset();\n    }, error => {\n      alert(error.message);\n      addForm.reset();\n    });\n  }\n  onUpdateEmloyee(employee) {\n    this.employeeService.updateEmployee(employee).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onDeleteEmloyee(employeeId) {\n    this.employeeService.deleteEmployee(employeeId).subscribe(response => {\n      console.log(response);\n      this.getEmployees();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  searchEmployees(key) {\n    console.log(key);\n    const results = [];\n    for (const employee of this.employees) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.jobTitle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n  onOpenModal(employee, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editEmployee = employee;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteEmployee = employee;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","employeeService","ngOnInit","getEmployees","subscribe","response","employees","error","alert","message","onAddEmloyee","addForm","document","getElementById","click","addEmployee","value","console","log","reset","onUpdateEmloyee","employee","updateEmployee","onDeleteEmloyee","employeeId","deleteEmployee","searchEmployees","key","results","name","toLowerCase","indexOf","email","phone","jobTitle","push","length","onOpenModal","mode","container","button","createElement","type","style","display","setAttribute","editEmployee","appendChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/wiktorczech/Desktop/APP/FrontEnd/src/app/app.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Employee } from './employee';\nimport { EmployeeService } from './employee.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public employees: Employee[] = [];\n  public editEmployee: Employee;\n  public deleteEmployee: Employee;\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.getEmployees();\n  }\n\n  public getEmployees(): void {\n    this.employeeService.getEmployees().subscribe(\n      (response: Employee[]) => {\n        this.employees = response;\n      }\n    ),\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n  }\n\n  public onAddEmloyee(addForm: NgForm): void {\n    document.getElementById('add-employee-form')?.click();\n    this.employeeService.addEmployee(addForm.value).subscribe(\n      (response: Employee[]) => {\n        console.log(response);\n        this.getEmployees();\n        addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n        addForm.reset();\n      }\n    );\n  }\n\n  public onUpdateEmloyee(employee: Employee): void {\n    this.employeeService.updateEmployee(employee).subscribe(\n      (response: Employee[]) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onDeleteEmloyee(employeeId: number): void {\n    this.employeeService.deleteEmployee(employeeId).subscribe(\n      (response: void) => {\n        console.log(response);\n        this.getEmployees();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public searchEmployees(key: string): void {\n    console.log(key);\n    const results: Employee[] = [];\n    for (const employee of this.employees) {\n      if (employee.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n        || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1\n        || employee.phone.toLowerCase().indexOf(key.toLowerCase()) !== -1\n        || employee.jobTitle.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.employees = results;\n    if (results.length === 0 || !key) {\n      this.getEmployees();\n    }\n  }\n\n  public onOpenModal(employee: Employee, mode: string): void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editEmployee = employee;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteEmployee = employee;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}